import{Z as P}from"./DXqIG5h6.js";import{u as o,y as p,C as m,E as g,F as w,a as d,G as v,I as S}from"./BORQtvDy.js";import"./Bo9Y2Pl6.js";const l=(e,r,t,a)=>{a=g(a);let s=1/0,c=0;const u=a.raw.map(i=>(s=Math.min(s,Math.floor(i.num/i.consumption)),c+=i.consumption*i.cost,v(e,i))),n=S(a.yieldRange,r),R=a.rareProd&&{...a.rareProd,num:s*a.rareProd.rate};return{...a,raw:u,crafts:s,avgYield:n,num:s*n,cost:c,timeCost:s*t/60,rareProd:R}},f=e=>{const r={name:e.name,price:e.price,raw:e.raw.map(t=>({name:t.name,price:t.price,cost:t.cost,num:t.num,consumption:t.consumption})),yieldRange:e.yieldRange};return e.rareProd&&(r.rareProd={price:e.rareProd.price,rate:e.rareProd.rate}),r},h={current:"alchemyCurrent",fav:"alchemyFav"};function y(e="current"){return e==="fav"?m.getItem(h.fav,Object.values(d)):m.getItem(h.current,d.elixir)}const x=P("Alchemy",{state:()=>{const{profitMargin:e,alchemy:r}=o(),t=l(e,r.extractMaxRate,r.time,y()),a=y("fav").map(c=>l(e,r.extractMaxRate,r.time,c));return{current:t,recipes:a}},actions:{newAlchemyRecipe(e){const r=o();return l(r.profitMargin,r.alchemy.extractMaxRate,r.alchemy.time,e)},cost(e=-1){const r=e===-1?this.current:this.recipes[e];return p(r.raw,t=>t.cost*t.num)},allIncomes(e=-1){const{profit:r}=o(),t=e===-1?this.current:this.recipes[e],a=r(t.num*t.price),s=t.rareProd?r(t.rareProd.num*t.rareProd.price):0;return{total:a+s,regular:a,rare:s,raw:r(p(t.raw,c=>c.price*c.num))}},hourly(e=-1){const r=e===-1?this.current:this.recipes[e],{profit:t,alchemyHourlyCrafts:a}=o(),s=a,c=r.avgYield*s,u=r.rareProd&&{profit:t(r.rareProd.rate*s*r.rareProd.price),yield:r.rareProd.rate*s};return{profit:c*r.price,yield:c,cost:p(r.raw,n=>n.cost*n.consumption)*s,...u&&{rareProd:u}}},procToRare(e){const r=o(),t=Math.floor(e/30);return{yield:t*10,timeCost:t/(r.successRate*10),cost:t*51e4}},refresh(){Object.assign(this.current,this.newAlchemyRecipe(this.current))},updateStorage(){const e=f(this.current);m.setItem(h.current,e);const r=this.recipes.map(t=>f(t));m.setItem(h.fav,r)},appendRaw(){const e=g(w(this.current.raw)),r=this.current.raw.map(s=>s.name),t="原料";let a=0;for(;r.includes(t+(a>0?a:""));)a++;e.name=t+(a>0?a:""),this.current.raw.push(e),this.refresh()},updateRecipe(e,r,t){e==="yieldRange"?this.current.yieldRange[t??0]=Number(r):Object.assign(this.current,{[e]:e==="name"?r:Number(r)}),this.refresh()},updateRaw(e,r,t){Object.assign(this.current.raw[e],{[r]:r==="name"?String(t):Number(t)}),this.refresh()},updateRareProd(e){if(!e){delete this.current.rareProd;return}this.current.rareProd=e,this.refresh()},setCrafts(e){this.current.raw.forEach((r,t)=>r.num=e[t]),this.refresh()},overrideCurrent(e){const r=typeof e=="string"?d[e]:this.recipes[e];Object.assign(this.current,this.newAlchemyRecipe(r))},removeRaw(e){this.current.raw.splice(e,1),this.refresh()},saveRecipe(){this.recipes.push(this.newAlchemyRecipe(this.current))},removeRecipe(e){this.recipes.splice(e,1)}}});export{x as default};
